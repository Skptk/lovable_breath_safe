[1mdiff --git a/src/pages/Rewards.tsx b/src/pages/Rewards.tsx[m
[1mindex 3f899ea..307a437 100644[m
[1m--- a/src/pages/Rewards.tsx[m
[1m+++ b/src/pages/Rewards.tsx[m
[36m@@ -80,6 +80,14 @@[m [mexport default function Rewards() {[m
   const { achievements, streaks, isLoading: achievementsLoading, error: achievementsError, refreshAchievements } = useAchievements();[m
   const { totalPoints, currencyRewards, canWithdraw } = useUserPoints();[m
 [m
[32m+[m[32m  // Debug logging[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    console.log('Rewards page - Achievements:', achievements);[m
[32m+[m[32m    console.log('Rewards page - Streaks:', streaks);[m
[32m+[m[32m    console.log('Rewards page - Loading:', achievementsLoading);[m
[32m+[m[32m    console.log('Rewards page - Error:', achievementsError);[m
[32m+[m[32m  }, [achievements, streaks, achievementsLoading, achievementsError]);[m
[32m+[m
   // Helper functions to get display information for streaks and achievements[m
   const getStreakDisplayInfo = (streakType: string) => {[m
     const streakInfo = {[m
[36m@@ -125,15 +133,18 @@[m [mexport default function Rewards() {[m
 [m
       // If no achievements exist, initialize them[m
       if (!existingAchievements || existingAchievements.length === 0) {[m
[31m-        // Initialize achievements manually since RPC function might not be available yet[m
[32m+[m[32m        console.log('Initializing achievements for user:', user.id);[m
[32m+[m[41m        [m
         try {[m
[31m-          // Get all active achievements[m
[32m+[m[32m          // Initialize achievements manually[m
           const { data: allAchievements } = await supabase[m
             .from('achievements')[m
             .select('id, criteria_value')[m
             .eq('is_active', true);[m
 [m
[31m-          if (allAchievements) {[m
[32m+[m[32m          if (allAchievements && allAchievements.length > 0) {[m
[32m+[m[32m            console.log('Found', allAchievements.length, 'achievements to initialize');[m
[32m+[m[41m            [m
             // Create user achievement records[m
             const achievementInserts = allAchievements.map(achievement => ({[m
               user_id: user.id,[m
[36m@@ -143,12 +154,18 @@[m [mexport default function Rewards() {[m
               unlocked: false[m
             }));[m
 [m
[31m-            await supabase[m
[32m+[m[32m            const { error: insertError } = await supabase[m
               .from('user_achievements')[m
               .insert(achievementInserts);[m
 [m
[32m+[m[32m            if (insertError) {[m
[32m+[m[32m              console.error('Error inserting achievements:', insertError);[m
[32m+[m[32m            } else {[m
[32m+[m[32m              console.log('Successfully inserted', achievementInserts.length, 'achievements');[m
[32m+[m[32m            }[m
[32m+[m
             // Initialize user streaks[m
[31m-            await supabase[m
[32m+[m[32m            const { error: streakError } = await supabase[m
               .from('user_streaks')[m
               .insert([[m
                 { user_id: user.id, streak_type: 'daily_reading', current_streak: 0, max_streak: 0, last_activity_date: new Date().toISOString().split('T')[0] },[m
[36m@@ -156,12 +173,24 @@[m [mexport default function Rewards() {[m
                 { user_id: user.id, streak_type: 'weekly_activity', current_streak: 0, max_streak: 0, last_activity_date: new Date().toISOString().split('T')[0] }[m
               ]);[m
 [m
[31m-            // Refresh achievements after initialization[m
[31m-            refreshAchievements();[m
[32m+[m[32m            if (streakError) {[m
[32m+[m[32m              console.error('Error inserting streaks:', streakError);[m
[32m+[m[32m            } else {[m
[32m+[m[32m              console.log('Successfully initialized user streaks');[m
[32m+[m[32m            }[m
[32m+[m[32m          } else {[m
[32m+[m[32m            console.log('No active achievements found in database');[m
           }[m
[32m+[m
[32m+[m[32m          // Refresh achievements after initialization[m
[32m+[m[32m          setTimeout(() => {[m
[32m+[m[32m            refreshAchievements();[m
[32m+[m[32m          }, 1000); // Small delay to ensure database operations complete[m
         } catch (initError) {[m
           console.error('Error initializing achievements manually:', initError);[m
         }[m
[32m+[m[32m      } else {[m
[32m+[m[32m        console.log('User already has achievements, skipping initialization');[m
       }[m
     } catch (error) {[m
       console.error('Error initializing user achievements:', error);[m
[36m@@ -368,6 +397,43 @@[m [mexport default function Rewards() {[m
         <p className="text-muted-foreground">[m
           Track your progress, unlock achievements, and redeem rewards[m
         </p>[m
[32m+[m[32m        <div className="flex justify-center gap-2">[m
[32m+[m[32m          <Button[m
[32m+[m[32m            variant="outline"[m
[32m+[m[32m            size="sm"[m
[32m+[m[32m            onClick={initializeUserAchievements}[m
[32m+[m[32m            disabled={achievementsLoading}[m
[32m+[m[32m          >[m
[32m+[m[32m            {achievementsLoading ? ([m
[32m+[m[32m              <Loader2 className="h-4 w-4 animate-spin mr-2" />[m
[32m+[m[32m            ) : ([m
[32m+[m[32m              <RefreshCw className="h-4 w-4 mr-2" />[m
[32m+[m[32m            )}[m
[32m+[m[32m            Initialize Achievements[m
[32m+[m[32m          </Button>[m
[32m+[m[32m          <Button[m
[32m+[m[32m            variant="outline"[m
[32m+[m[32m            size="sm"[m
[32m+[m[32m            onClick={refreshAchievements}[m
[32m+[m[32m            disabled={achievementsLoading}[m
[32m+[m[32m          >[m
[32m+[m[32m            {achievementsLoading ? ([m
[32m+[m[32m              <Loader2 className="h-4 w-4 animate-spin mr-2" />[m
[32m+[m[32m            ) : ([m
[32m+[m[32m              <RefreshCw className="h-4 w-4 mr-2" />[m
[32m+[m[32m            )}[m
[32m+[m[32m            Refresh Data[m
[32m+[m[32m          </Button>[m
[32m+[m[32m        </div>[m
[32m+[m[41m        [m
[32m+[m[32m        {/* Error Display */}[m
[32m+[m[32m        {achievementsError && ([m
[32m+[m[32m          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded-lg">[m
[32m+[m[32m            <p className="text-sm text-red-700">[m
[32m+[m[32m              <strong>Error loading achievements:</strong> {achievementsError}[m
[32m+[m[32m            </p>[m
[32m+[m[32m          </div>[m
[32m+[m[32m        )}[m
       </div>[m
 [m
       {/* Stats Overview */}[m
[36m@@ -406,7 +472,7 @@[m [mexport default function Rewards() {[m
           <CardContent className="p-4 text-center">[m
             <div className="text-3xl font-bold text-orange-500 mb-2">[m
               <Flame className="w-8 h-8 mx-auto mb-2" />[m
[31m-              {Math.max(...streaks.map(s => s.current_streak))}[m
[32m+[m[32m              {streaks.length > 0 ? Math.max(...streaks.map(s => s.current_streak)) : 0}[m
             </div>[m
             <p className="text-sm text-muted-foreground">Best Streak</p>[m
           </CardContent>[m
[36m@@ -433,28 +499,48 @@[m [mexport default function Rewards() {[m
               </CardTitle>[m
             </CardHeader>[m
             <CardContent className="space-y-4">[m
[31m-              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">[m
[31m-                {streaks.map((streak) => {[m
[31m-                  const displayInfo = getStreakDisplayInfo(streak.streak_type);[m
[31m-                  return ([m
[31m-                    <Card key={streak.id} className="border-2 border-orange-200 bg-orange-50/50">[m
[31m-                      <CardContent className="p-4 text-center">[m
[31m-                        <div className="text-4xl mb-2">{displayInfo.icon}</div>[m
[31m-                [33m0bbce30[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m  FIX: Add fallback Supabase credentials for Netlify deployment
[33m4e51729[m  SECURITY: Remove exposed API keys and implement secure environment variable handling
[33m4cd42a1[m Implement persistent location permission storage for better UX
[33m0b4658f[m Fix achievement system: centralize initialization, prevent duplicates, add progress tracking
[33mfc580af[m Add automatic profile validation and sign-out for deleted users
